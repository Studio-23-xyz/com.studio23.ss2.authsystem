{
  "api/Global.DummyAuthProviderEditor.html": {
    "href": "api/Global.DummyAuthProviderEditor.html",
    "title": "Class DummyAuthProviderEditor | |",
    "keywords": "Class DummyAuthProviderEditor Namespace Global public class DummyAuthProviderEditor : MonoBehaviour Inheritance object DummyAuthProviderEditor"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace | |",
    "keywords": "Namespace Classes DummyAuthProviderEditor"
  },
  "api/Studio23.SS2.AuthSystem.Core.AuthenticationManager.html": {
    "href": "api/Studio23.SS2.AuthSystem.Core.AuthenticationManager.html",
    "title": "Class AuthenticationManager | |",
    "keywords": "Class AuthenticationManager Namespace Studio23.SS2.AuthSystem.Core public class AuthenticationManager : MonoBehaviour Inheritance object AuthenticationManager Fields OnAuthFailed public UnityEvent<int> OnAuthFailed Field Value UnityEvent<int> OnAuthSuccess public UnityEvent<int> OnAuthSuccess Field Value UnityEvent<int> instance public static AuthenticationManager instance Field Value AuthenticationManager Methods Authenticate() This method will check user authentication for validating Digital Rights Management for the project public UniTask Authenticate() Returns UniTask AuthenticateFromUI() public void AuthenticateFromUI() GetUserData() Gets the user related data public UniTask<UserData> GetUserData() Returns UniTask<UserData> SetProviderType() public void SetProviderType()"
  },
  "api/Studio23.SS2.AuthSystem.Core.ProviderFactory.html": {
    "href": "api/Studio23.SS2.AuthSystem.Core.ProviderFactory.html",
    "title": "Class ProviderFactory | |",
    "keywords": "Class ProviderFactory Namespace Studio23.SS2.AuthSystem.Core public class ProviderFactory : MonoBehaviour Inheritance object ProviderFactory Methods GetProvider(ProviderTypes) public ProviderBase GetProvider(ProviderTypes type) Parameters type ProviderTypes Returns ProviderBase Initialize() public void Initialize() RegisterProvider(ProviderBase) public void RegisterProvider(ProviderBase provider) Parameters provider ProviderBase"
  },
  "api/Studio23.SS2.AuthSystem.Core.html": {
    "href": "api/Studio23.SS2.AuthSystem.Core.html",
    "title": "Namespace Studio23.SS2.AuthSystem.Core | |",
    "keywords": "Namespace Studio23.SS2.AuthSystem.Core Classes AuthenticationManager ProviderFactory"
  },
  "api/Studio23.SS2.AuthSystem.Data.DummyAuthProvider.html": {
    "href": "api/Studio23.SS2.AuthSystem.Data.DummyAuthProvider.html",
    "title": "Class DummyAuthProvider | |",
    "keywords": "Class DummyAuthProvider Namespace Studio23.SS2.AuthSystem.Data public class DummyAuthProvider : ProviderBase Inheritance object ProviderBase DummyAuthProvider Inherited Members ProviderBase._providerType ProviderBase.ProviderType Fields DummyUser public UserData DummyUser Field Value UserData FailAuth public bool FailAuth Field Value bool SimulatedWaitTimeForLogin public float SimulatedWaitTimeForLogin Field Value float customReturnCode public int customReturnCode Field Value int Methods Authenticate() public override UniTask<int> Authenticate() Returns UniTask<int> GetUserData() public override UniTask<UserData> GetUserData() Returns UniTask<UserData>"
  },
  "api/Studio23.SS2.AuthSystem.Data.ProviderBase.html": {
    "href": "api/Studio23.SS2.AuthSystem.Data.ProviderBase.html",
    "title": "Class ProviderBase | |",
    "keywords": "Class ProviderBase Namespace Studio23.SS2.AuthSystem.Data public abstract class ProviderBase : ScriptableObject Inheritance object ProviderBase Derived DummyAuthProvider Fields _providerType protected ProviderTypes _providerType Field Value ProviderTypes Properties ProviderType public ProviderTypes ProviderType { get; } Property Value ProviderTypes Methods Authenticate() public abstract UniTask<int> Authenticate() Returns UniTask<int> GetUserData() public abstract UniTask<UserData> GetUserData() Returns UniTask<UserData>"
  },
  "api/Studio23.SS2.AuthSystem.Data.ProviderTypes.html": {
    "href": "api/Studio23.SS2.AuthSystem.Data.ProviderTypes.html",
    "title": "Enum ProviderTypes | |",
    "keywords": "Enum ProviderTypes Namespace Studio23.SS2.AuthSystem.Data public enum ProviderTypes Fields Default = 0 PlayStation = 4 Steam = 1 XboxGameCore = 2 XboxPc = 3"
  },
  "api/Studio23.SS2.AuthSystem.Data.UserData.html": {
    "href": "api/Studio23.SS2.AuthSystem.Data.UserData.html",
    "title": "Class UserData | |",
    "keywords": "Class UserData Namespace Studio23.SS2.AuthSystem.Data [Serializable] public class UserData Inheritance object UserData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields UserAvatar public Texture2D UserAvatar Field Value Texture2D UserID UniqueID from platforms public string UserID Field Value string UserName public string UserName Field Value string UserNickname public string UserNickname Field Value string"
  },
  "api/Studio23.SS2.AuthSystem.Data.html": {
    "href": "api/Studio23.SS2.AuthSystem.Data.html",
    "title": "Namespace Studio23.SS2.AuthSystem.Data | |",
    "keywords": "Namespace Studio23.SS2.AuthSystem.Data Classes DummyAuthProvider ProviderBase UserData Enums ProviderTypes"
  },
  "api/Studio23.SS2.AuthSystem.Editor.AuthSystemDebugTools.html": {
    "href": "api/Studio23.SS2.AuthSystem.Editor.AuthSystemDebugTools.html",
    "title": "Class AuthSystemDebugTools | |",
    "keywords": "Class AuthSystemDebugTools Namespace Studio23.SS2.AuthSystem.Editor public class AuthSystemDebugTools : UnityEditor.Editor Inheritance object AuthSystemDebugTools Methods OnInspectorGUI() public override void OnInspectorGUI()"
  },
  "api/Studio23.SS2.AuthSystem.Editor.AuthSystemInstaller.html": {
    "href": "api/Studio23.SS2.AuthSystem.Editor.AuthSystemInstaller.html",
    "title": "Class AuthSystemInstaller | |",
    "keywords": "Class AuthSystemInstaller Namespace Studio23.SS2.AuthSystem.Editor public class AuthSystemInstaller : UnityEditor.Editor Inheritance object AuthSystemInstaller"
  },
  "api/Studio23.SS2.AuthSystem.Editor.html": {
    "href": "api/Studio23.SS2.AuthSystem.Editor.html",
    "title": "Namespace Studio23.SS2.AuthSystem.Editor | |",
    "keywords": "Namespace Studio23.SS2.AuthSystem.Editor Classes AuthSystemDebugTools AuthSystemInstaller"
  },
  "api/Studio23.SS2.AuthSystem.Utilities.DontDestroyUtility.html": {
    "href": "api/Studio23.SS2.AuthSystem.Utilities.DontDestroyUtility.html",
    "title": "Class DontDestroyUtility | |",
    "keywords": "Class DontDestroyUtility Namespace Studio23.SS2.AuthSystem.Utilities public class DontDestroyUtility : MonoBehaviour Inheritance object DontDestroyUtility"
  },
  "api/Studio23.SS2.AuthSystem.Utilities.html": {
    "href": "api/Studio23.SS2.AuthSystem.Utilities.html",
    "title": "Namespace Studio23.SS2.AuthSystem.Utilities | |",
    "keywords": "Namespace Studio23.SS2.AuthSystem.Utilities Classes DontDestroyUtility"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "| |",
    "keywords": "This is the documentation for the Scripting APIs of this package."
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | |",
    "keywords": "Changelog [v4.0.2] - 2023-1-31 Updated Improved Editor Tools New Sample Scene Code Refactored [v4.0.0] - 2023-1-12 Breaking Changes Introduced Added AuthSystemInstaller.cs: New installer for the authentication system. DefaultProvider.cs: Implementation of a default authentication provider. ProviderFactory.cs: Factory class for creating authentication providers. ProviderTypes.cs: Enumeration of provider types. DontDestroyUtility.cs: Utility to prevent objects from being destroyed on load. New samples Updated AuthenticationManager.cs: Changes to the core authentication management logic. ProviderBase.cs: Modifications to the base class for authentication providers. UserData.cs: Updates to the user data structure. [v3.0.0] - 2023-1-9 Authentication is now based on Async calls Code Cleanup [v2.0.6] - 2023-12-19 Now initialization event is based on unity event for better editor access [v2.0.0] - 2023-11-28 Updated with Steam authentication extension details, installation instructions, and usage guidelines. Added AuthenticationManager class with a method to authenticate via a provider [v0.1.0] - 2023-11-24 Added Base Package for the System"
  },
  "index.html": {
    "href": "index.html",
    "title": "| |",
    "keywords": "This page redirects to the manual."
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "| |",
    "keywords": "MIT License Copyright (c) 2023 Studio-23 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "Authentication System | |",
    "keywords": "Authentication System This is an extension package for Authentication System. Steam exposes multiple methods for authenticating a Steam user's identity and verifying ownership of an application. This system will provide validation for the steam and verify the identity and ownership of the following product. Table of Contents Installation Usage Installation Install via Git URL You can also use the \"Install from Git URL\" option from Unity Package Manager to install the package. https://github.com/Studio-23-xyz/com.studio23.ss2.authsystem.git#upm Package Manager open Edit/Project Settings/Package Manager add a new Scoped Registry (or edit the existing OpenUPM entry) Name package.openupm.com URL https://package.openupm.com Scope(s) com.cysharp.unitask com.studio23.ss2.authsystem click Save or Apply open Window/Package Manager click + select Add package by name... or Add package from git URL... paste com.studio23.ss2.authsystem into name click Add Usage Fromt top toolbar Studio-23>AuthSystem>Install This is a base package where it shares dependency to the other authentication packages. Download the required package you need for the publishing such as steam or xbox."
  }
}